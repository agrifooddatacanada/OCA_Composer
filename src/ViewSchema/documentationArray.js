export const dataFormatsArray = [
  { row: 15, column: 2, text: "Pre-defined Data Formats" },
  { row: 16, column: 2, text: "Boolean" },
  { row: 16, column: 3, text: "Binary" },
  { row: 17, column: 3, text: "image/jpeg" },
  { row: 18, column: 3, text: "image/png" },
  { row: 19, column: 3, text: "image/tiff" },
  { row: 20, column: 3, text: "application/pdf" },
  { row: 16, column: 4, text: "DateTime" },
  { row: 17, column: 4, text: "YYYY-MM-DDThh:mm:ssZ" },
  { row: 18, column: 4, text: "YYYY-MM-DD" },
  { row: 19, column: 4, text: "hh:mm:ss" },
  { row: 20, column: 4, text: "PnYnMnD" },
  { row: 16, column: 5, text: "Numeric" },
  { row: 17, column: 5, text: "^[+-]?\\d*\\.?\\d+$" },
  { row: 18, column: 5, text: "^[+-]?\\d+$" },
  { row: 19, column: 5, text: "^\\+?\\d*\\.?\\d+$" },
  { row: 20, column: 5, text: "^\\+?\\d+$" },
  { row: 16, column: 6, text: "Reference" },
  { row: 16, column: 7, text: "Text" },
  { row: 17, column: 7, text: "^[A-Za-z0-9_]*$" },
  { row: 18, column: 7, text: "^[A-Za-z0-9_]{10}$" },
  { row: 19, column: 7, text: "10\\.([0-9]+\\.*)+[/](([^\\s\\.])+\\.*)+" },
  { row: 20, column: 7, text: "(\\d{4}-){3}\\d{3}[0-9X]" },
  { row: 21, column: 7, text: "0[a-hj-km-np-tv-z|0-9]{6}[0-9]{2}" },
  { row: 16, column: 8, text: "Array_Boolean" },
  { row: 16, column: 9, text: "Array_Binary" },
  { row: 17, column: 9, text: "image/jpeg" },
  { row: 18, column: 9, text: "image/png" },
  { row: 19, column: 9, text: "image/tiff" },
  { row: 20, column: 9, text: "application/pdf" },
  { row: 17, column: 10, text: "YYYY-MM-DDThh:mm:ssZ" },
  { row: 16, column: 10, text: "Array_DateTime" },
  { row: 18, column: 10, text: "YYYY-MM-DD" },
  { row: 19, column: 10, text: "hh:mm:ss" },
  { row: 20, column: 10, text: "PnYnMnD" },
  { row: 16, column: 11, text: "Array_Numeric" },
  { row: 17, column: 11, text: "^[+-]?\\d*\\.?\\d+$" },
  { row: 18, column: 11, text: "^[+-]?\\d+$" },
  { row: 19, column: 11, text: "^\\+?\\d*\\.?\\d+$" },
  { row: 20, column: 11, text: "^\\+?\\d+$" },
  { row: 16, column: 12, text: "Array_Reference" },
  { row: 16, column: 13, text: "Array_Text" },
  { row: 17, column: 13, text: "^[A-Za-z0-9_]*$" },
  { row: 18, column: 13, text: "^[A-Za-z0-9_]{10}$" },
  { row: 19, column: 13, text: "10\\.([0-9]+\\.*)+[/](([^\\s\\.])+\\.*)+" },
  { row: 20, column: 13, text: "(\\d{4}-){3}\\d{3}[0-9X]" },
  { row: 21, column: 13, text: "0[a-hj-km-np-tv-z|0-9]{6}[0-9]{2}" },
];

export const documentationArray = [
  { row: 1, column: 2, text: "Reference Documentation" },
  {
    row: 2,
    column: 2,
    text: `
  Notes:	\n	
** Data elements and responses should first be assessed by country programme managers to ensure alignment with local context and policies. Adaptations to the actions and annotations may need to be adjusted to local context. \n
** In cases were data elements need to be modified or added due to adaptation requirements, it is recommended to utilize the same template (per the table below) as the core data dictionary and complete all the relevant columns. Adding or modifying data elements may require revising the terminology mappings to ensure that the standard terminology codes still reflect the data element as intended. \n
** Some data elements are spread across multiple rows to account for the different ways they may be mapped to a standardized terminology. Where this occurs, the rows will be blank except for the terminology codes.
  `,
  },
  { row: 4, column: 2, text: "Columns" },
  { row: 4, column: 3, text: "Constrained Input Options (if relevant)" },
  { row: 4, column: 4, text: "Description" },
  { row: 5, column: 2, text: "Capture Base" },
  { row: 5, column: 3, text: "CB-CL: Classification" },
  {
    row: 5,
    column: 4,
    text: `A Capture Base is a stable base object that defines a single dataset in its purest form, providing a standard base to harmonise data. The "classification" meta attribute is for capturing a standardised classification scheme and taxonomy code to identify the primary sector, area, or topic of a published schema's intended use. Taxonomy codes provide a means for classifying schemas into groupings according to similar functions, markets, products, or services, ultimately leading to better search results for users interested in different categories. (e.g., CRDC:RDF40).`,
  },
  { row: 6, column: 3, text: "CB-AN: Attribute Name" },
  {
    row: 6,
    column: 4,
    text: "A Capture Base is a stable base object that defines a single dataset in its purest form, providing a standard base to harmonise data. An attribute name is a string that uniquely identifies an attribute within an OCA layer and is used to reference that attribute by other layers throughout the OCA bundle.",
  },
  { row: 7, column: 3, text: "CB-AT: Attribute Type" },
  {
    row: 7,
    column: 4,
    text: "A Capture Base is a stable base object that defines a single dataset in its purest form, providing a standard base to harmonise data. An attribute type determines the attribute's syntax and how attributes of that type are compared and sorted. A Capture Base recognises seven core data types: Text / Numeric / Reference / Boolean / Binary / DateTime / Array[data type].",
  },
  { row: 8, column: 3, text: "CB-FA: Flagged Attribute" },
  {
    row: 8,
    column: 4,
    text: "A Capture Base is a stable base object that defines a single dataset in its purest form, providing a standard base to harmonise data. Any attributes defined in a Capture Base that may contain identifying information about entities (i.e., personally identifiable information (PII) or quasi-identifiable information (QII)) can be flagged.",
  },
  { row: 9, column: 2, text: "Character Encoding Overlay" },
  { row: 9, column: 3, text: "OL-CH: Character Encoding" },
  {
    row: 9,
    column: 4,
    text: "A Character Encoding Overlay defines the process of assigning numbers to graphical characters, especially the written characters of human language, allowing them to be stored, transmitted, and transformed using digital computers. Character encoding using internationally accepted standards permits worldwide interchange of text in electronic form. The default character set is UTF-8, the most common encoding for the World Wide Web.",
  },
  { row: 10, column: 2, text: "Format Overlay" },
  { row: 10, column: 3, text: "OL-FT: Format" },
  {
    row: 10,
    column: 4,
    text: "A Format Overlay defines an input and display format for data fields. The data format enables conversion of the input buffer to the program variable and displays program variable data to form fields.",
  },
  { row: 11, column: 2, text: "Entry Code Overlay" },
  { row: 11, column: 3, text: "OL-EC: Entry Code" },
  {
    row: 11,
    column: 4,
    text: "An Entry Code Overlay defines the entry keys in a series of key-value pairs stored in a code table (aka lookup table) or dataset. The key is a unique identifier that points to its associated value.",
  },
  { row: 12, column: 2, text: "Conformance Overlay" },
  { row: 12, column: 3, text: "OL-CN: Conformance" },
  {
    row: 12,
    column: 4,
    text: "A Conformance Overlay indicates whether a value for an attribute is mandatory or optional.",
  },
  { row: 13, column: 2, text: "Unit Overlay" },
  { row: 13, column: 3, text: "OL-UT: Unit" },
  {
    row: 13,
    column: 4,
    text: "A Unit Overlay defines the units of measurement adopted by convention or law, used as a standard for measuring the same kind of quantity. The recommended system to use is the International System of Units (SI), French Système International d’Unités, an international decimal system of weights and measures derived from and extending the metric system of units.",
  },
  { row: 14, column: 2, text: "Meta Overlay" },
  { row: 14, column: 3, text: "OL-MN: Meta [Attribute Name]" },
  {
    row: 14,
    column: 4,
    text: "A Meta Overlay defines the descriptive information about a schema or form. It is used for discovery and identification and includes elements such as 'schema name'.",
  },
  { row: 15, column: 3, text: "OL-MV: Meta [Attribute Value]" },
  {
    row: 15,
    column: 4,
    text: "A Meta Overlay defines the descriptive information about a schema or form. It is used for discovery and identification and includes elements such as 'schema description'.",
  },

  { row: 16, column: 2, text: "Label Overlay" },
  { row: 16, column: 3, text: "OL-LA: Label" },
  {
    row: 16,
    column: 4,
    text: "A Label Overlay defines attribute and category labels. For example, given an attribute named firstName, you may want to display a label First Name which is more user-friendly when displayed to end users in places such as form inputs and error messages.",
  },
  { row: 17, column: 2, text: "Entry Overlay" },
  { row: 17, column: 3, text: "OL-EN: Entry" },
  {
    row: 17,
    column: 4,
    text: "An Entry Overlay defines the entry values in a series of key-value pairs stored in a code table (aka lookup table) or dataset. A value is either the identified data or a pointer to that data.",
  },
  { row: 18, column: 2, text: "Information Overlay" },
  { row: 18, column: 3, text: "OL-IN: Information" },
  {
    row: 18,
    column: 4,
    text: "An Information Overlay defines attribute field descriptions and usage notes to assist the data entry process or to add context to presented data.",
  },

  { row: 19, column: 2, text: "Data Type" },
  { row: 19, column: 4, text: "The data types are as follows:" },
  { row: 20, column: 3, text: "Text" },
  {
    row: 20,
    column: 4,
    text: "Text: A human-readable sequence of characters and the words they form, subsequently encoded into computer-readable formats such as ASCII.",
  },
  { row: 21, column: 3, text: "Numeric" },
  {
    row: 21,
    column: 4,
    text: "Numeric: Anything relating to or containing numbers. Examples of numeric data types include 8-byte integers, fixed precision and scale numeric data, floating precision number data, integer (whole number) data, and monetary data values.",
  },
  { row: 22, column: 3, text: "Reference" },
  {
    row: 22,
    column: 4,
    text: "Reference: A Self-Addressing IDentifier (SAID) that references a set of attributes through its associated parent. For example, the reference data type enables the development of nested data objects, where the organisation of information is in layers or where objects contain other similar objects. SAID is an identifier that is deterministically generated from and embedded in the content it identifies, making it and its data mutually tamper-evident.",
  },
  { row: 23, column: 3, text: "Boolean" },
  {
    row: 23,
    column: 4,
    text: "Boolean: The data only has two possible variables: true or false. In computer science, Boolean is an identification classifier for calculating logical truth values and algebraic variables.",
  },
  { row: 24, column: 3, text: "Binary" },
  {
    row: 24,
    column: 4,
    text: "Binary: A binary code signal, a series of electrical pulses representing numbers, characters, and performed operations. Based on a binary number system, each digit position represents a power of two (e.g., 4, 8, 16, etc.). A set of four binary digits or bits in binary code represents each decimal number (0 to 9). Each digit has two possible states: off and on (usually symbolised by 0 and 1). Combining basic Boolean algebraic operations on binary numbers makes it possible to represent each of the four fundamental arithmetic operations of addition, subtraction, multiplication, and division.",
  },
  { row: 25, column: 3, text: "DateTime" },
  {
    row: 25,
    column: 4,
    text: "DateTime: The number of seconds or clock ticks that have elapsed since the defined epoch for that computer or platform. Common formats include dates (e.g., YYYY-MM-DD), times (e.g., hh:mm:ss), dates and times concatenated (e.g., YYYY-MM-DDThh:mm:ss.sss+zz:zz), and durations (e.g., PnYnMnD).",
  },
  { row: 26, column: 3, text: "Array[data type]" },
  {
    row: 26,
    column: 4,
    text: "Array[data type]: A structure that holds several data items or elements of the same data type. When you want to store many pieces of data that are related and have the same data type, it is often better to use an array instead of many separate variables (e.g. array[text], array[numeric], etc.).",
  },
  { row: 27, column: 2, text: "Notes" },
  {
    row: 27,
    column: 4,
    text: "This column should also be used for any other notes, annotations, or communication messages within the team. ",
  },
  { row: 28, column: 2, text: "CRDC 2020 Version 1.0" },
  {
    row: 28,
    column: 4,
    text: "This column provides the relevant research code for the data element. CRDC 2020 represents the first in its kind and introduces a new dedicated framework for measuring research and development activities in Canada. This first version is officially called CRDC 2020 Version 1.0.",
  },

  {
    row: 30,
    column: 2,
    text: "Abbreviations",
  },
  {
    row: 31,
    column: 2,
    text: "CB = Capture Base",
  },
  { row: 32, column: 2, text: "OL = Overlay" },
  { row: 33, column: 2, text: "SAI = Self-Addressing Identifier" },
  { row: 34, column: 2, text: "URL = Uniform Resource Locator" },
  { row: 35, column: 2, text: "PII = Personally Identifiable Information" },
  { row: 36, column: 2, text: "QII = Quasi-identifiable information" },
  {
    row: 37,
    column: 2,
    text: "ISO = The International Organization for Standardization",
  },
  {
    row: 38,
    column: 2,
    text: "CRDC = Canadian Research and Development Classification",
  },
  { row: 39, column: 2, text: "FOR = Field of Research" },
];
